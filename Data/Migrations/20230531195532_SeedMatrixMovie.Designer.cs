// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyMovieLibrary.Data;

#nullable disable

namespace MyMovieLibrary.Data.Migrations
{
    [DbContext(typeof(MyMovieLibraryDbContext))]
    [Migration("20230531195532_SeedMatrixMovie")]
    partial class SeedMatrixMovie
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyMovieLibrary.Data.Models.Actor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Actor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21371c7e-3ab9-4dcc-8f53-51c8eef910ed"),
                            Name = "Ethan Hawke"
                        },
                        new
                        {
                            Id = new Guid("ba3af6d3-cf1e-4348-a832-cbbf083c8cfc"),
                            Name = "Sarah Snook"
                        },
                        new
                        {
                            Id = new Guid("a783e8fc-55c1-4ec3-ae4f-6ddec38e6d8d"),
                            Name = "Noah Taylor"
                        },
                        new
                        {
                            Id = new Guid("409512bc-bf31-4a6e-ba0d-13a052a51109"),
                            Name = "Dwayne Johnson"
                        },
                        new
                        {
                            Id = new Guid("79d8a005-9662-4c48-8e1a-89c3e163c6dd"),
                            Name = "Michael Fassbender"
                        },
                        new
                        {
                            Id = new Guid("ee4498a8-2251-402e-8ce0-070807f960c9"),
                            Name = "Sarah Shahi"
                        },
                        new
                        {
                            Id = new Guid("873dac8f-627c-44f3-a1d3-982817ca65c6"),
                            Name = "Keanu Reeves"
                        });
                });

            modelBuilder.Entity("MyMovieLibrary.Data.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6d7b3135-dd01-4dc1-8cb2-c0631f66bdf0"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("9e315f6b-b49c-4596-9154-f9011715b25b"),
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = new Guid("02ec846d-5f9c-4b31-b17f-413f0b49493b"),
                            Name = "Horror"
                        },
                        new
                        {
                            Id = new Guid("c8324202-a9bf-4d8e-a0ce-c21a046c8a52"),
                            Name = "Drama"
                        },
                        new
                        {
                            Id = new Guid("3104db1a-525c-4f63-aedf-242184ee6637"),
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("d4da5470-0224-4efc-9fe2-5cc2747630f2"),
                            Name = "Romance"
                        },
                        new
                        {
                            Id = new Guid("b451328c-8f3c-4511-94c2-29f2e3402eb6"),
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("d09e5f41-9592-4c4c-a9ac-1a75d413b7ed"),
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = new Guid("cd501ea6-cf55-4382-807e-4037599647b3"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("278b2b4e-e0d7-45cb-93ed-6d38489922a7"),
                            Name = "Crime"
                        },
                        new
                        {
                            Id = new Guid("e789f0b0-219e-4632-9d0e-d41233ed72f5"),
                            Name = "Biographical"
                        });
                });

            modelBuilder.Entity("MyMovieLibrary.Data.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PremiereDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7dca29e5-2322-4453-b303-768cf8d1e6bc"),
                            GenreId = new Guid("d09e5f41-9592-4c4c-a9ac-1a75d413b7ed"),
                            PremiereDate = new DateTime(2015, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Predestination"
                        },
                        new
                        {
                            Id = new Guid("b38f029e-018f-40e7-830d-958e7a658fe0"),
                            GenreId = new Guid("6d7b3135-dd01-4dc1-8cb2-c0631f66bdf0"),
                            PremiereDate = new DateTime(2018, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Skyscraper"
                        },
                        new
                        {
                            Id = new Guid("6c105a1c-011b-4605-bc7e-6e12eb470338"),
                            GenreId = new Guid("c8324202-a9bf-4d8e-a0ce-c21a046c8a52"),
                            PremiereDate = new DateTime(2015, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Steve Jobs"
                        },
                        new
                        {
                            Id = new Guid("f1a9a5d1-aa68-4cba-979a-817cc502ca99"),
                            GenreId = new Guid("02ec846d-5f9c-4b31-b17f-413f0b49493b"),
                            PremiereDate = new DateTime(2013, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Purge"
                        },
                        new
                        {
                            Id = new Guid("1a4d6444-4739-4058-a905-ba58f9c43779"),
                            GenreId = new Guid("cd501ea6-cf55-4382-807e-4037599647b3"),
                            PremiereDate = new DateTime(2022, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Black Adam"
                        },
                        new
                        {
                            Id = new Guid("e1e820f4-a38d-41c3-b87f-accc0eaa5672"),
                            GenreId = new Guid("3104db1a-525c-4f63-aedf-242184ee6637"),
                            PremiereDate = new DateTime(2017, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Baywatch"
                        },
                        new
                        {
                            Id = new Guid("9ed08e60-a2c6-425a-bf5d-0a1bd92ee83b"),
                            GenreId = new Guid("d09e5f41-9592-4c4c-a9ac-1a75d413b7ed"),
                            PremiereDate = new DateTime(1999, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Matrix"
                        });
                });

            modelBuilder.Entity("MyMovieLibrary.Data.Models.MovieActor", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MovieActor");

                    b.HasData(
                        new
                        {
                            MovieId = new Guid("7dca29e5-2322-4453-b303-768cf8d1e6bc"),
                            ActorId = new Guid("21371c7e-3ab9-4dcc-8f53-51c8eef910ed")
                        },
                        new
                        {
                            MovieId = new Guid("7dca29e5-2322-4453-b303-768cf8d1e6bc"),
                            ActorId = new Guid("ba3af6d3-cf1e-4348-a832-cbbf083c8cfc")
                        },
                        new
                        {
                            MovieId = new Guid("7dca29e5-2322-4453-b303-768cf8d1e6bc"),
                            ActorId = new Guid("a783e8fc-55c1-4ec3-ae4f-6ddec38e6d8d")
                        },
                        new
                        {
                            MovieId = new Guid("b38f029e-018f-40e7-830d-958e7a658fe0"),
                            ActorId = new Guid("a783e8fc-55c1-4ec3-ae4f-6ddec38e6d8d")
                        },
                        new
                        {
                            MovieId = new Guid("b38f029e-018f-40e7-830d-958e7a658fe0"),
                            ActorId = new Guid("409512bc-bf31-4a6e-ba0d-13a052a51109")
                        },
                        new
                        {
                            MovieId = new Guid("6c105a1c-011b-4605-bc7e-6e12eb470338"),
                            ActorId = new Guid("ba3af6d3-cf1e-4348-a832-cbbf083c8cfc")
                        },
                        new
                        {
                            MovieId = new Guid("6c105a1c-011b-4605-bc7e-6e12eb470338"),
                            ActorId = new Guid("79d8a005-9662-4c48-8e1a-89c3e163c6dd")
                        },
                        new
                        {
                            MovieId = new Guid("f1a9a5d1-aa68-4cba-979a-817cc502ca99"),
                            ActorId = new Guid("21371c7e-3ab9-4dcc-8f53-51c8eef910ed")
                        },
                        new
                        {
                            MovieId = new Guid("1a4d6444-4739-4058-a905-ba58f9c43779"),
                            ActorId = new Guid("409512bc-bf31-4a6e-ba0d-13a052a51109")
                        },
                        new
                        {
                            MovieId = new Guid("1a4d6444-4739-4058-a905-ba58f9c43779"),
                            ActorId = new Guid("ee4498a8-2251-402e-8ce0-070807f960c9")
                        },
                        new
                        {
                            MovieId = new Guid("9ed08e60-a2c6-425a-bf5d-0a1bd92ee83b"),
                            ActorId = new Guid("873dac8f-627c-44f3-a1d3-982817ca65c6")
                        });
                });

            modelBuilder.Entity("MyMovieLibrary.Data.Models.Movie", b =>
                {
                    b.HasOne("MyMovieLibrary.Data.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("MyMovieLibrary.Data.Models.MovieActor", b =>
                {
                    b.HasOne("MyMovieLibrary.Data.Models.Actor", "Actor")
                        .WithMany("Movies")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MyMovieLibrary.Data.Models.Movie", "Movie")
                        .WithMany("Actors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MyMovieLibrary.Data.Models.Actor", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MyMovieLibrary.Data.Models.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MyMovieLibrary.Data.Models.Movie", b =>
                {
                    b.Navigation("Actors");
                });
#pragma warning restore 612, 618
        }
    }
}
